[{"/home/adityesh/Health-Tracker-Frontend/src/index.js":"1","/home/adityesh/Health-Tracker-Frontend/src/App.js":"2","/home/adityesh/Health-Tracker-Frontend/src/socket.js":"3","/home/adityesh/Health-Tracker-Frontend/src/components/Auth/Login.js":"4","/home/adityesh/Health-Tracker-Frontend/src/components/Auth/Register.js":"5","/home/adityesh/Health-Tracker-Frontend/src/components/Dashboard/UserDash.js":"6","/home/adityesh/Health-Tracker-Frontend/src/components/Dashboard/DoctorDash.js":"7","/home/adityesh/Health-Tracker-Frontend/src/components/Landing.js":"8","/home/adityesh/Health-Tracker-Frontend/src/context/context.js":"9"},{"size":169,"mtime":1610036852831,"results":"10","hashOfConfig":"11"},{"size":2150,"mtime":1610094864195,"results":"12","hashOfConfig":"11"},{"size":118,"mtime":1610002113062,"results":"13","hashOfConfig":"11"},{"size":2847,"mtime":1610102741258,"results":"14","hashOfConfig":"11"},{"size":3378,"mtime":1610102724465,"results":"15","hashOfConfig":"11"},{"size":3182,"mtime":1610037484615,"results":"16","hashOfConfig":"11"},{"size":143,"mtime":1610032762008,"results":"17","hashOfConfig":"11"},{"size":1197,"mtime":1610098871782,"results":"18","hashOfConfig":"11"},{"size":104,"mtime":1610037038013,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ubd3mr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/adityesh/Health-Tracker-Frontend/src/index.js",[],["41","42"],"/home/adityesh/Health-Tracker-Frontend/src/App.js",[],"/home/adityesh/Health-Tracker-Frontend/src/socket.js",[],"/home/adityesh/Health-Tracker-Frontend/src/components/Auth/Login.js",["43"],"/home/adityesh/Health-Tracker-Frontend/src/components/Auth/Register.js",[],"/home/adityesh/Health-Tracker-Frontend/src/components/Dashboard/UserDash.js",["44"],"import '../../App.css';\nimport {socket} from '../../socket';\nimport React, { useEffect, useState } from 'react';\nimport { Line } from '@reactchartjs/react-chart.js'\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst UserDash = () => {\n  const [maxTemp, setMaxTemp] = useState('');\n  const [maxPulse, setMaxPulse] = useState('');\n  const [data, setData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: 'Body Temperature',\n        data: [],\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        borderColor: 'rgba(255, 99, 132, 0.2)',\n      },\n    ],\n  });\n\n  const [pulseData, setPulseData] = useState({\n    labels: [],\n    datasets: [\n      {\n        label: 'Body Pulse',\n        data: [],\n        fill: true,\n        backgroundColor: 'rgb(0,72,186)',\n        borderColor: 'rgb(0,72,186)',\n      }\n    ],\n  });\n\n  const notify = (message) => {\n    toast.warn(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose : 3000\n    });\n  };\n  \n  const notifyPulse = (message) => {\n    toast.error(message, {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose : 3000\n    });\n  }\n\n  \n  \n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  }\n\n\n  useEffect(() => {\n    \n    socket.on('Temp', (posts) => {\n      \n      const xAxis = posts.reverse().map((post) => {\n          \n          return new Date(post.createdAt).toLocaleTimeString();\n      })\n      const yAxis = posts.reverse().map(post => {\n        \n        return post.bodyTemp;\n      });\n      let currentMaxTemp = maxTemp;\n      if(Math.max(...yAxis) >= currentMaxTemp) {\n        setMaxTemp(Math.max(...yAxis));\n        \n      }\n\n      const yAxisPulse = posts.reverse().map(post => {\n        return post.bodyPulse;\n      });\n      let currentMaxPulse = maxPulse;\n      if(Math.max(...yAxisPulse) >= currentMaxPulse) {\n        setMaxPulse(Math.max(...yAxisPulse));\n      }\n      \n\n      setData({\n        labels: xAxis,\n        datasets: [\n          {\n            label: 'Body Temperature',\n            data: yAxis,\n            fill: false,\n            backgroundColor: 'rgb(255, 99, 132)',\n            borderColor: 'rgba(255, 99, 132, 0.2)',\n          },\n        ],\n      });\n\n      setPulseData({\n        labels: xAxis,\n        datasets: [\n          {\n            label: 'Body Pulse',\n            data: yAxisPulse,\n            fill: false,\n            backgroundColor: 'rgb(0,72,186)',\n            borderColor: 'rgb(0,72,186, 0.2)',\n          },\n        ],\n      });\n\n      \n    })\n\n    return () => {\n      socket.removeAllListeners();\n      socket.disconnect();\n    }\n  },[]);\n\n\n  useEffect(() => {\n    if(maxTemp >= 38) {\n      notify(\"Alert, Body Temp \" + maxTemp + 'â„ƒ');\n    }\n\n    if(maxPulse >= 90) {\n      notifyPulse(\"Alert, High Body Pulse - \" + maxPulse);\n    }\n\n  }, [maxTemp, maxPulse]);\n\n  return (\n    <div className=\"App\">\n      <Line data={data} options={options} />\n      <Line data={pulseData} options={options}/>\n      <ToastContainer/>\n    </div>\n  )\n  \n  \n  \n}\n\nexport default UserDash;\n","/home/adityesh/Health-Tracker-Frontend/src/components/Dashboard/DoctorDash.js",[],"/home/adityesh/Health-Tracker-Frontend/src/components/Landing.js",["45","46"],"import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport './Landing.css';\nexport default function Landing() {\n    const history = useHistory();\n    return(\n        <>\n        \n        <div className=\"landing-page\">\n            \n            <div className=\"left-container\">\n                <h1>Heath Tracker <i className=\"fa fa-medkit\" aria-hidden=\"false\"></i></h1>\n                <div className=\"login-container\">\n                    <p>Log in to your account</p> \n                    <a className=\"horizontal\"  onClick={() => history.push('/login')}><span className=\"text\">Login</span></a>\n                </div>\n                <div className=\"or-container\">\n                    <p>or</p>\n                </div>\n                \n                 <div className=\"register-container\">\n                 <p>Sign up for an account</p>\n                 <a className=\"horizontal\" onClick={() => history.push('/register')}><span className=\"text\">Sign Up</span></a>\n                 </div>\n            </div>\n            <div className=\"right-container\">\n                <h3>Landing Page for Health Tracker</h3>\n            </div>\n            \n        </div>\n        </>\n    ) \n}","/home/adityesh/Health-Tracker-Frontend/src/context/context.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":16,"column":13,"nodeType":"53","messageId":"54","endLine":16,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":125,"column":5,"nodeType":"57","endLine":125,"endColumn":7,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":15,"column":21,"nodeType":"61","endLine":15,"endColumn":87},{"ruleId":"59","severity":1,"message":"60","line":23,"column":18,"nodeType":"61","endLine":23,"endColumn":86},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'maxPulse' and 'maxTemp'. Either include them or remove the dependency array.","ArrayExpression",["64"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [maxPulse, maxTemp]",{"range":"67","text":"68"},[2745,2747],"[maxPulse, maxTemp]"]